PROCEDIMIENTO Método HTTP POST - API REST - Conexión a MYSQL

1. Deacargar "postman"
    1.1. Vamos al navegador y colocamos el siguiente link "https://www.postman.com/downloads/" donde podremos descargar "postman"
    1.2. Registrar o iniciar la cuenta de "postman"


2. Trabajo en el postman
    2.1. Creación de un workspace
        2.1.1 Abrir el postman, ya sea desde el inicio o desde el escritorio, depende de donde lo tengan.
        2.1.2. En el menú que esta en la parte superior de la ventana, dar clic en "Workspaces".
        2.1.3. Buscar el boton que dice "Create Workspace", y darle clic.
        2.1.4. Selecionamos "Blank workspace" y le damos clic en next
        2.1.5. Llenamos los datos que nos pide el formulario "Create your workspace", en especial, en name ponemos "Campus"
        2.1.6. Dar clic en "create" para finalizar el nuevo workspace.
    2.2. Creación de una collection
        2.2.1. En la parte izquierda de la pagina del postman vemos un menu vertical, darle clic en "Collections"
        2.2.2. En la pagina vemos un a pestañan con el nombre "Overview" y que al lado tiene un botoncito con un "+", le damos clic a ese "+" y vemos que nos abre una pestaña que se parece mucho al THUNDER.
        2.2.3. Tomamos el link de la API que hemos hecho "localhost:5000/api/categorias", lo ponemos en la barra de links, le damos clic al boton "Send" y observamos que se carga la API en la parte inferior.
    2.3. Guardar la Request
        2.3.1. Arriba del boton "Send" y un poquito a la izquierda, vemos el boton "Save", le damos clic a ese boton.
        2.3.2. Le damos clic al boton "Create a collection", que esta en la mitad del modal.
        2.3.3. Ponerle el nombre de "facturartemis" y dale clic en "Create"
        2.3.4. Borramos el link de la API,  escribimos en ese cuadro "GET - categorias" y para finalizar le damos clic en "Save"
        2.3.5. Verfificamos que hemos creado "facturartemis" y que dentro esta "GET - categorias" dandole clic a el icono de usuario que esta encima de "Collections"
    2.4. Nueva Request
        2.4.1. Abrimos una nueva pestaña (basado en el 2.2.2) y la guardamos (bassado en el 2.3.1) con el nombre POST - Categorias.
        2.4.2. En la parte izquierda donde se pone la URL hay un select que tiene por defecto el metodo GET, para este caso vamos a seleccionar el método POST.
        2.4.3. Ponemos la misma URL que trabajamos anteriormente: "localhost:5000/api/categorias"  .
        2.4.4. Debajo de la URL hay un pequeño menu (Params, Authorizations, Headers, Body, etc) donde vamos a seleccionar "Body".
        2.4.5. Ahora, debajo de ese pequeño menu, hay como una opciones (none, form-data, etc), vamos a seleccionar "raw" la cual nos habilita un select, y vamos a seleccionar "JSON".
    2.5. Trabajo con el POST ---- POST : Es el que me ayuda a insertar a la base de datos
        2.5.1. Vamos a ir al "Get - Categorias" y copio el primer elemento de la API, me devuelvo a "POST - Categorias" y lo pego en el recuadro.
        2.5.2. Borramos CategoriaID, ya que el ID es AUTO_INCREMENT


3. Trabajo en "categoria.controllers.js"
    3.1. Punto 5(5.1) y 6.


4. Trabajo en "categorias.routes.js"
    4.1. Punto 7.


5. Trabajo en el postman
    5.1. Verfificacion de que todo lo de la Actividad 2 este bien
    5.2. Damos clic en "Send" y nos debe aparecer lo que hicimos en la Actividad 3, punto 5, dentro del res.json 
    5.3. Obervamos la consola o el terminal y vamos a ver que hay termino que dice "undefined", eso quiere decir que lo que enviamos a la consola en la Actividad 3, punto 5, esta indefinido. 


6. Trabajo en "app"
    6.1. Hacemos este paso para arreglar el problema de la Actividad 5.3
    6.2. Punto 8.


7. Trabajo en el postman
    7.1. Damos clic en "Send" y nos debe aparecer lo que hicimos en la Actividad 3, punto 5, dentro del res.json.
    7.2.  Obervamos la consola o el terminal y vamos a ver que ya no aparece "undefined", si no que aparece el "body" que tenemos en el "raw".
    7.3. Una vez verificado comentamos el "console.log" del archivo "categoria.controllers.js" del punto 5.1.


8.  Trabajo en "categoria.controllers.js"
    8.1. Punto 5.2
    8.2. volvemos al postman y le damos clic a "send"
    8.3. En la consola o terminal se debe ver la destructuracion del objeto del "Body"
    8.4. Una vez verificado comentamos los "console.log" del archivo "categoria.controllers.js" del punto 5.2.


9. Trabajo en "categoria.controllers.js" -> Insertar datos en la base de datos.
    9.1. Comentamos las lineas que hacen parte de la actividad 5.1
    9.2. Punto 5.3


10. Explicación del connection.query(p1, p2) -> Este me permite ir a la base de datos "facturartemis" en phpMyAdmin e INSERTAR datos en cualquier tabla, en este caso hay 2 parametros, uno es la accion que queremos hacer (insertar), y el otro es el objeto con los datos que queremos insertar.
    10.1. Procedimiento para llenar los parentesis
        10.1.1. INSERT INTO -> este me dice que voy a insertar datos en alguna tabla de la base de datos de "facturartemis"
        10.1.2. nombre de la tabla -> coloco el nombre de la tabla a la que le quiero insertar datos.
        10.1.3. SET ? -> setea o asgina valores a cada una de las columnas de la tabla, ¿Pero que valores? Los valores que estan en el siguiente parametro el cual es un objeto.
        10.1.4. nombre del ojeto -> objeto donde estan los valores que quiero agregar y tiene el mismo nombre de las columnas.
        10.1.5. Ejemplo de la tabla categorias de la base de datos "facturartemis : 
                connection.query("INSERT INTO categorias SET ?", category);


11. Realizar el mismo procedimiento para agregar otra categoria a la tabla de categorias


12. Trabajo en el postman
    12.1. Volvemos a "Get - Categorias" y vemos que los elementos insertados estan alli en la API



